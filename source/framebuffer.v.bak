module framebuffer #(
    parameter COLOR_DEPTH   = 1,
    parameter SCREEN_WIDTH  = 640,
    parameter SCREEN_HEIGHT = 480
)(
    input                           clk,
    input                           clk_25,
    input        [9:0]              write_h,
    input        [9:0]              write_v, // Changed to 10-bit
    input        [COLOR_DEPTH-1:0]  write_data,
    input                           wren,
    input        [9:0]              read_h,
    input        [9:0]              read_v,  // Changed to 10-bit
    input                           clear,
    output reg   [COLOR_DEPTH-1:0]  read_data_out
);

localparam NUM_PIXELS = SCREEN_WIDTH * SCREEN_HEIGHT;
localparam ADDR_WIDTH = 19;
reg [COLOR_DEPTH-1:0] pixel_memory [0:NUM_PIXELS-1];
wire [ADDR_WIDTH-1:0] write_addr = (write_v * SCREEN_WIDTH) + write_h;
wire [ADDR_WIDTH-1:0] read_addr  = (read_v  * SCREEN_WIDTH) + read_h;

    always @(posedge clk) begin
        if (clear) begin
            for (integer i=0; i<NUM_PIXELS; i=i+1)
                pixel_memory[i] <= 1'b0;
        end else if (wren) pixel_memory[write_addr] <= write_data;
    end
    always @(posedge clk_25) begin
        read_data_out <= pixel_memory[read_addr];
    end
endmodule